{"version":3,"sources":["components/Wrapper/Wrapper.styles.js","components/Form/Form.styles.js","components/Form/Form.js","components/SectionTitle/SectionTitle.styles.js","components/SectionTitle/SectionTitle.js","components/Contacts/ContactsList.styles.js","components/Contacts/ContactsList.js","components/Filter/Filter.styles.js","components/Filter/Filter.js","components/App/App.js","components/utils/localStorage-helper.js","index.js"],"names":["Wrapper","styled","div","FormLabel","label","FormInput","input","FormStyle","form","BtnSubmit","button","Form","onSubmit","useState","name","setName","number","setNumber","inputChange","evt","target","value","preventDefault","type","onChange","pattern","title","required","size","color","style","marginLeft","TitleSection","h2","SectionTitle","children","ItemContact","li","BtnDelete","ContactsList","contactList","onDelete","map","contact","marginRight","onClick","id","FilterLabel","FilterInput","Filter","filter","onFilterChange","App","key","datalocalStorage","localStorage","getItem","JSON","parse","error","Error","readData","testDataContacts","contacts","setContacts","setFilter","useEffect","setItem","stringify","writeData","dataSubmit","find","toLowerCase","alert","newContact","uuidv4","prevState","currentTarget","filterLowerCase","includes","filterContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d53a7de2.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.div`\n  width: 650px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 10px 30px 20px;\n\n  background-color: var(--bg-color);\n  border-radius: 20px;\n  box-shadow: 1px 1px 16px -2px var(--main-color);\n`;\n","import styled from \"@emotion/styled\";\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin-bottom: 15px;\n\n  font-weight: bold;\n  font-size: 14px;\n`;\n\nexport const FormInput = styled.input`\n  border-radius: 6px;\n  height: 26px;\n  border-color: var(--second-color);\n\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    outline: none;\n    border-color: var(--main-color);\n  }\n`;\n\nexport const FormStyle = styled.form`\n  display: flex;\n  flex-direction: column;\n\n  width: 250px;\n  padding: 20px;\n\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 10px;\n`;\n\nexport const BtnSubmit = styled.button`\n  display: flex;\n  align-items: center;\n  min-width: 100px;\n  padding: 6px 15px;\n  margin-top: 10px;\n  margin-right: auto;\n\n  border-color: var(--second-color);\n  border-radius: 6px;\n\n  &:hover,\n  &:focus {\n    background-color: var(--second-color);\n    color: var(--invers-color);\n    cursor: pointer;\n  }\n`;\n","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FormLabel, FormInput, FormStyle, BtnSubmit } from \"./Form.styles\";\nimport { MdPersonAdd } from \"react-icons/md\";\n\nconst Form = ({onSubmit}) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  function inputChange(evt) {\n    const { name } = evt.target;\n    \n    switch (name) {\n      case 'name': setName(evt.target.value);\n        break;\n      case 'number': setNumber(evt.target.value);\n        break;\n      default: break;\n    }\n  }\n\n  function formSubmit(evt) {\n    evt.preventDefault();\n    \n    onSubmit({name, number});\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n      <FormStyle onSubmit={formSubmit}>\n        <FormLabel>\n          Name\n          <FormInput\n            type=\"text\"\n            value={name}\n            onChange={inputChange}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </FormLabel>\n\n        <FormLabel>\n          Fhone number\n          <FormInput\n            type=\"tel\"\n            value={number}\n            onChange={inputChange}\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </FormLabel>\n\n        <BtnSubmit type=\"submit\">\n          ADD CONTACT{\" \"}\n          <MdPersonAdd size={26} color=\"#8919FA\" style={{ marginLeft: 20 }} />\n        </BtnSubmit>\n      </FormStyle>\n    );\n\n}\n\n// class Form extends Component {\n//   state = {\n//     name: \"\",\n//     number: \"\",\n//   };\n\n//   InputChange = evt => {\n//     this.setState({\n//       [evt.currentTarget.name]: evt.currentTarget.value,\n//     });\n//   };\n\n//   FormSubmit = evt => {\n//     evt.preventDefault();\n//     // console.log(evt);\n//     // console.log(this.state);\n\n//     this.props.onSubmit(this.state);\n\n//     this.setState({\n//       name: \"\",\n//       number: \"\",\n//     });\n//   };\n\n//   render() {\n//     return (\n//       <FormStyle onSubmit={this.FormSubmit}>\n//         <FormLabel>\n//           Name\n//           <FormInput\n//             type=\"text\"\n//             value={this.state.name}\n//             onChange={this.InputChange}\n//             name=\"name\"\n//             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//             title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n//             required\n//           />\n//         </FormLabel>\n\n//         <FormLabel>\n//           Fhone number\n//           <FormInput\n//             type=\"tel\"\n//             value={this.state.number}\n//             onChange={this.InputChange}\n//             name=\"number\"\n//             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//             title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n//             required\n//           />\n//         </FormLabel>\n\n//         <BtnSubmit type=\"submit\">\n//           ADD CONTACT{\" \"}\n//           <MdPersonAdd size={26} color=\"#8919FA\" style={{ marginLeft: 20 }} />\n//         </BtnSubmit>\n//       </FormStyle>\n//     );\n//   }\n// }\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import styled from \"@emotion/styled\";\n\nexport const TitleSection = styled.h2`\n  font-weight: bold;\n  padding: 20px 0px;\n`;\n","import { TitleSection } from \"./SectionTitle.styles\";\nimport PropTypes from \"prop-types\";\n\nconst SectionTitle = ({ title, children }) => {\n  return (\n    <section>\n      <TitleSection>{title}</TitleSection>\n      {children}\n    </section>\n  );\n};\n\nSectionTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default SectionTitle;\n","import styled from \"@emotion/styled\";\n\nexport const ItemContact = styled.li`\n  display: flex;\n  justify-content: space-between;\n\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const BtnDelete = styled.button`\n  display: flex;\n  align-items: center;\n  min-width: 80px;\n  padding: 3px 18px;\n\n  border-color: var(--second-color);\n  border-radius: 6px;\n\n  &:hover,\n  &:focus {\n    background-color: var(--second-color);\n    color: var(--invers-color);\n    cursor: pointer;\n  }\n`;\n","import PropTypes from \"prop-types\";\nimport { ItemContact, BtnDelete } from \"./ContactsList.styles\";\nimport { MdDelete } from \"react-icons/md\";\nimport { RiUser3Line } from \"react-icons/ri\";\n\nconst ContactsList = ({ contactList, onDelete }) => {\n  return (\n    <ul>\n      {contactList.map(contact => (\n        <ItemContact key={contact.id}>\n          <div>\n            <RiUser3Line size={14} style={{ marginRight: 10 }} />\n            {contact.name}: {contact.number}\n          </div>\n          <BtnDelete type=\"submit\" onClick={() => onDelete(contact.id)}>\n            delete\n            <MdDelete size={16} color=\"#8919FA\" style={{ marginLeft: 10 }} />\n          </BtnDelete>\n        </ItemContact>\n      ))}\n    </ul>\n  );\n};\n\nContactsList.propTypes = {\n  contactList: PropTypes.array.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import styled from \"@emotion/styled\";\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n\n  width: 200px;\n  margin-bottom: 20px;\n\n  font-weight: bold;\n  font-size: 14px;\n`;\n\nexport const FilterInput = styled.input`\n  border-radius: 6px;\n  height: 24px;\n  border-color: var(--second-color);\n\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    outline: none;\n    border-color: var(--main-color);\n  }\n`;\n","import PropTypes from \"prop-types\";\nimport { FilterLabel, FilterInput } from \"./Filter.styles\";\n\nconst Filter = ({ filter, onFilterChange }) => {\n  return (\n    <FilterLabel>\n      Find contacts by name\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onFilterChange}\n      />\n    </FilterLabel>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onFilterChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","// import { Component } from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Wrapper } from \"../Wrapper/Wrapper.styles\";\nimport Form from \"../Form\";\nimport SectionTitle from \"../SectionTitle\";\nimport ContactsList from \"../Contacts\";\nimport Filter from \"../Filter\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { writeData, readData } from \"../utils/localStorage-helper\";\n\nimport testDataContacts from \"../data/data.json\";\n\nfunction App() {\n  const [contacts, setContacts] = useState(() => {\n    return readData(\"contacts\") ?? [...testDataContacts]\n  });\n  const [filter, setFilter] = useState('');\n\n  const formSubmitHandler = dataSubmit => {\n    const { name, number } = dataSubmit;\n\n    if (\n      contacts.find(\n        contact => name.toLowerCase() === contact.name.toLowerCase(),\n      )\n    ) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    setContacts(prevState => ([...prevState, newContact]));\n  };\n\n  const filterChange = evt => {\n    setFilter(evt.currentTarget.value);\n  };\n\n  const filterContacts = () => {\n    // const { contacts, filter } = this.state;\n    const filterLowerCase = filter.toLowerCase();\n\n    const contactsFilter = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterLowerCase),\n    );\n\n     return contactsFilter;\n  };\n\n  const onDeleteContact = id => {\n    setContacts(prevState => (prevState.filter(contact => contact.id !== id)));\n  };\n\n  useEffect(() => {\n    writeData(\"contacts\", contacts)\n  },[contacts]);\n  \n  return (\n      <Wrapper>\n        <SectionTitle title=\"Phonebook\">\n          <Form onSubmit={formSubmitHandler} />\n        </SectionTitle>\n\n        <SectionTitle title=\"Contacts\">\n          <Filter\n            filter={filter}\n            onFilterChange={filterChange}\n          />\n          <ContactsList\n            contactList={filterContacts()}\n            onDelete={onDeleteContact}\n          />\n        </SectionTitle>\n      </Wrapper>\n    );\n}\n\n// class App extends Component {\n//   state = {\n//     contacts: [...testDataContacts],\n//     filter: \"\",\n//   };\n\n//   componentDidMount() {\n//     if (readData(\"contacts\")) {\n//       this.setState({ contacts: readData(\"contacts\") });\n//     }\n//   }\n\n//   componentDidUpdate(prevProps, prevState) {\n//     if (prevState.contacts !== this.state.contacts) {\n//       writeData(\"contacts\", this.state.contacts);\n//     }\n//   }\n\n//   FormSubmitHandler = dataSubmit => {\n//     const { contacts } = this.state;\n//     const { name, number } = dataSubmit;\n\n//     if (\n//       contacts.find(\n//         contact => name.toLowerCase() === contact.name.toLowerCase(),\n//       )\n//     ) {\n//       alert(`${name} is already in contacts`);\n//       return;\n//     }\n\n//     const newContact = {\n//       id: uuidv4(),\n//       name,\n//       number,\n//     };\n\n//     this.setState(prevState => ({\n//       contacts: [...prevState.contacts, newContact],\n//     }));\n//   };\n\n//   FilterChange = evt => {\n//     this.setState({\n//       filter: evt.currentTarget.value,\n//     });\n//   };\n\n//   FilterContacts = () => {\n//     const { contacts, filter } = this.state;\n//     const filterLowerCase = filter.toLowerCase();\n\n//     const contactsFilter = contacts.filter(contact =>\n//       contact.name.toLowerCase().includes(filterLowerCase),\n//     );\n\n//     return contactsFilter;\n//   };\n\n//   onDeleteContact = id => {\n//     this.setState(prevState => ({\n//       contacts: prevState.contacts.filter(contact => contact.id !== id),\n//     }));\n//   };\n\n//   render() {\n//     return (\n//       <Wrapper>\n//         <SectionTitle title=\"Phonebook\">\n//           <Form onSubmit={this.FormSubmitHandler} />\n//         </SectionTitle>\n\n//         <SectionTitle title=\"Contacts\">\n//           <Filter\n//             filter={this.state.filter}\n//             onFilterChange={this.FilterChange}\n//           />\n//           <ContactsList\n//             contactList={this.FilterContacts()}\n//             onDelete={this.onDeleteContact}\n//           />\n//         </SectionTitle>\n//       </Wrapper>\n//     );\n//   }\n// }\n\nexport default App;\n","export function writeData(key, value) {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (error) {\n    throw new Error();\n  }\n}\n\nexport function readData(key) {\n  try {\n    const datalocalStorage = localStorage.getItem(key);\n    return datalocalStorage ? JSON.parse(datalocalStorage) : null;\n  } catch (error) {\n    throw new Error();\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}